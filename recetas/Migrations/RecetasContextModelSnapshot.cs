// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using recetas.Models;

namespace recetas.Migrations
{
    [DbContext(typeof(RecetasContext))]
    partial class RecetasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("recetas.Models.Medicamentos", b =>
                {
                    b.Property<int>("Id_medicamento")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Acargoafil");

                    b.Property<double>("Acargoos");

                    b.Property<string>("Atc");

                    b.Property<string>("Generico");

                    b.Property<double>("Grupoter");

                    b.Property<string>("Laboratorio");

                    b.Property<string>("Nombre");

                    b.Property<string>("Obser");

                    b.Property<string>("Plan");

                    b.Property<double>("Pr");

                    b.Property<string>("Presentacion");

                    b.Property<double>("Pvp");

                    b.Property<double>("Registro");

                    b.HasKey("Id_medicamento");

                    b.ToTable("medicamentos");
                });

            modelBuilder.Entity("recetas.Models.Padron", b =>
                {
                    b.Property<int>("Id_Padron")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Categoria");

                    b.Property<string>("Cobrador");

                    b.Property<string>("Ecivil");

                    b.Property<string>("Email");

                    b.Property<DateTime>("F_alta_grupo");

                    b.Property<DateTime>("F_antiguedad1");

                    b.Property<DateTime>("F_baja");

                    b.Property<DateTime>("F_egreso");

                    b.Property<DateTime>("F_ingreso");

                    b.Property<DateTime>("F_nacimiento");

                    b.Property<string>("Motivo_baja_agrupado_grupo");

                    b.Property<string>("Motivo_baja_grupo");

                    b.Property<string>("Motivo_baja_miembro");

                    b.Property<string>("Motivo_baja_miembro_agrupado");

                    b.Property<string>("Movil");

                    b.Property<string>("Nacionalidad");

                    b.Property<string>("Nombre");

                    b.Property<string>("Num_doc");

                    b.Property<int>("Numero");

                    b.Property<int>("Orden");

                    b.Property<bool>("Paciente_Cronico");

                    b.Property<string>("Parentesco");

                    b.Property<string>("Plan");

                    b.Property<string>("Prepaga_anterior");

                    b.Property<string>("Prepaga_proxima");

                    b.Property<string>("Presento");

                    b.Property<string>("Promotor");

                    b.Property<string>("Sexo");

                    b.Property<string>("Telefono");

                    b.Property<string>("Tipo_doc");

                    b.Property<string>("Tipo_grupo");

                    b.Property<string>("Vive_calle");

                    b.Property<string>("Vive_cod_postal");

                    b.Property<string>("Vive_depto");

                    b.Property<string>("Vive_localidad");

                    b.Property<string>("Vive_localidad_texto");

                    b.Property<string>("Vive_numero");

                    b.Property<string>("Vive_partido");

                    b.Property<string>("Vive_piso");

                    b.Property<string>("Vive_provincia");

                    b.Property<string>("Volveria");

                    b.Property<string>("Zona");

                    b.HasKey("Id_Padron");

                    b.ToTable("padron");
                });
#pragma warning restore 612, 618
        }
    }
}
